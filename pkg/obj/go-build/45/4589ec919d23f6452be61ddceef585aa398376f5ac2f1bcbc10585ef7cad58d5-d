// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/fpf/Downloads/go1.11.1/misc/cgo/test/issue24161res/restype.go:1:1
// Copyright 2018 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build darwin

package issue24161res; import _cgo_unsafe "unsafe"

/*
#cgo LDFLAGS: -framework CoreFoundation
#include <CoreFoundation/CoreFoundation.h>
*/
import _ "unsafe"
import (
	"reflect"
	"testing"
)

func Test(t *testing.T) {
	if k := reflect.TypeOf(func(_cgo0 _Ctype_CFAllocatorRef, _cgo1 *_cgo_unsafe.Pointer, _cgo2 _Ctype_CFIndex, _cgo3 *_Ctype_struct___0) _Ctype_CFArrayRef {;	_cgoCheckPointer(_cgo0);	return (_Cfunc_CFArrayCreate)(_cgo0, _cgo1, _cgo2, _cgo3);}(0, nil, 0, nil)).Kind(); k != reflect.Uintptr {
		t.Fatalf("bad kind %s\n", k)
	}
}
