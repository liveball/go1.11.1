// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/fpf/Downloads/go1.11.1/misc/cgo/test/issue14838.go:1:1
// Copyright 2016 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Issue 14838. add CBytes function

package cgotest; import _cgo_unsafe "unsafe"

/*
#include <stdlib.h>

int check_cbytes(char *b, size_t l) {
	int i;
	for (i = 0; i < l; i++) {
		if (b[i] != i) {
			return 0;
		}
	}
	return 1;
}
*/
import _ "unsafe"

import (
	"testing"
	"unsafe"
)

func test14838(t *testing.T) {
	data := []byte{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
	cData := func(_cgo0 []byte) _cgo_unsafe.Pointer {;	_cgoCheckPointer(_cgo0);	return (_Cfunc_CBytes)(_cgo0);}(data)
	defer func(_cgo0 _cgo_unsafe.Pointer) {;	_cgoCheckPointer(_cgo0);	(_Cfunc_free)(_cgo0);}(cData)

	if (_Cfunc_check_cbytes)((*_Ctype_char)(cData), _Ctype_size_t(len(data))) == 0 {
		t.Fatalf("mismatched data: expected %v, got %v", data, (*(*[10]byte)(unsafe.Pointer(cData)))[:])
	}
}
