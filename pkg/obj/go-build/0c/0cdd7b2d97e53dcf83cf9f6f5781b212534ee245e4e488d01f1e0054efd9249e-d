//go:cgo_ldflag "-g"
//go:cgo_ldflag "-O2"
// Code generated by cmd/cgo; DO NOT EDIT.

package main

import "unsafe"

import _ "runtime/cgo"

import "syscall"

var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype___darwin_pthread_t *_Ctype_struct__opaque_pthread_t

type _Ctype_char int8

type _Ctype_int int32

type _Ctype_long int64

type _Ctype_pthread_t = _Ctype___darwin_pthread_t

type _Ctype_struct___darwin_pthread_handler_rec struct {
	__routine	*[0]byte
	__arg		unsafe.Pointer
	__next		*_Ctype_struct___darwin_pthread_handler_rec
}

type _Ctype_struct__opaque_pthread_t struct {
	__sig		_Ctype_long
	__cleanup_stack	*_Ctype_struct___darwin_pthread_handler_rec
	__opaque	[8176]_Ctype_char
}

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgo_runtime_cgocallback runtime.cgocallback
func _cgo_runtime_cgocallback(unsafe.Pointer, unsafe.Pointer, uintptr, uintptr)

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, ...interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})

//go:cgo_import_static _cgo_e75b2fdc4fc4_Cfunc_CRaiseSIGIO
//go:linkname __cgofn__cgo_e75b2fdc4fc4_Cfunc_CRaiseSIGIO _cgo_e75b2fdc4fc4_Cfunc_CRaiseSIGIO
var __cgofn__cgo_e75b2fdc4fc4_Cfunc_CRaiseSIGIO byte
var _cgo_e75b2fdc4fc4_Cfunc_CRaiseSIGIO = unsafe.Pointer(&__cgofn__cgo_e75b2fdc4fc4_Cfunc_CRaiseSIGIO)

//go:cgo_unsafe_args
func _Cfunc_CRaiseSIGIO(p0 *_Ctype_pthread_t) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_e75b2fdc4fc4_Cfunc_CRaiseSIGIO, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_export_dynamic GoCatchSIGIO
//go:linkname _cgoexp_e75b2fdc4fc4_GoCatchSIGIO _cgoexp_e75b2fdc4fc4_GoCatchSIGIO
//go:cgo_export_static _cgoexp_e75b2fdc4fc4_GoCatchSIGIO
//go:nosplit
//go:norace
func _cgoexp_e75b2fdc4fc4_GoCatchSIGIO(a unsafe.Pointer, n int32, ctxt uintptr) {
	fn := _cgoexpwrap_e75b2fdc4fc4_GoCatchSIGIO
	_cgo_runtime_cgocallback(**(**unsafe.Pointer)(unsafe.Pointer(&fn)), a, uintptr(n), ctxt);
}

func _cgoexpwrap_e75b2fdc4fc4_GoCatchSIGIO() {
	GoCatchSIGIO()
}
//go:cgo_export_dynamic GoRaiseSIGIO
//go:linkname _cgoexp_e75b2fdc4fc4_GoRaiseSIGIO _cgoexp_e75b2fdc4fc4_GoRaiseSIGIO
//go:cgo_export_static _cgoexp_e75b2fdc4fc4_GoRaiseSIGIO
//go:nosplit
//go:norace
func _cgoexp_e75b2fdc4fc4_GoRaiseSIGIO(a unsafe.Pointer, n int32, ctxt uintptr) {
	fn := _cgoexpwrap_e75b2fdc4fc4_GoRaiseSIGIO
	_cgo_runtime_cgocallback(**(**unsafe.Pointer)(unsafe.Pointer(&fn)), a, uintptr(n), ctxt);
}

func _cgoexpwrap_e75b2fdc4fc4_GoRaiseSIGIO(p0 *_Ctype_pthread_t) {
	GoRaiseSIGIO(p0)
}
//go:cgo_export_dynamic SIGIOCount
//go:linkname _cgoexp_e75b2fdc4fc4_SIGIOCount _cgoexp_e75b2fdc4fc4_SIGIOCount
//go:cgo_export_static _cgoexp_e75b2fdc4fc4_SIGIOCount
//go:nosplit
//go:norace
func _cgoexp_e75b2fdc4fc4_SIGIOCount(a unsafe.Pointer, n int32, ctxt uintptr) {
	fn := _cgoexpwrap_e75b2fdc4fc4_SIGIOCount
	_cgo_runtime_cgocallback(**(**unsafe.Pointer)(unsafe.Pointer(&fn)), a, uintptr(n), ctxt);
}

func _cgoexpwrap_e75b2fdc4fc4_SIGIOCount() (r0 _Ctype_int) {
	return SIGIOCount()
}
