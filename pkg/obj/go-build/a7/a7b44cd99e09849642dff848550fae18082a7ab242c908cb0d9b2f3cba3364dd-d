
package main

import (

	"os"

	"testing"
	"testing/internal/testdeps"


	_test "go/printer"


	_xtest "go/printer_test"


)

var tests = []testing.InternalTest{

	{"TestFiles", _test.TestFiles},

	{"TestLineComments", _test.TestLineComments},

	{"TestBadNodes", _test.TestBadNodes},

	{"TestBadComments", _test.TestBadComments},

	{"TestSourcePos", _test.TestSourcePos},

	{"TestIssue5945", _test.TestIssue5945},

	{"TestDeclLists", _test.TestDeclLists},

	{"TestStmtLists", _test.TestStmtLists},

	{"TestBaseIndent", _test.TestBaseIndent},

	{"TestFuncType", _test.TestFuncType},

	{"TestWriteErrors", _test.TestWriteErrors},

	{"TestX", _test.TestX},

	{"TestCommentedNode", _test.TestCommentedNode},

	{"TestIssue11151", _test.TestIssue11151},

	{"Test", _xtest.Test},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkPrint", _test.BenchmarkPrint},

}

var examples = []testing.InternalExample{

	{"ExampleFprint", _xtest.ExampleFprint, "funcAST, fset := parseFunc(\"example_test.go\", \"ExampleFprint\")\n\nvar buf bytes.Buffer\nprinter.Fprint(&buf, fset, funcAST.Body)\n\ns := buf.String()\ns = s[1 : len(s)-1]\ns = strings.TrimSpace(strings.Replace(s, \"\\n\\t\", \"\\n\", -1))\n\nfmt.Println(s)\n", false},

}

func init() {
	testdeps.ImportPath = "go/printer"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, examples)

	os.Exit(m.Run())

}

