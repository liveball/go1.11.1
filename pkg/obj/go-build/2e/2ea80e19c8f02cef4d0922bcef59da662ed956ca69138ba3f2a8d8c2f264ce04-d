
package main

import (

	"os"

	"testing"
	"testing/internal/testdeps"


	_test "crypto/rsa"



)

var tests = []testing.InternalTest{

	{"TestDecryptPKCS1v15", _test.TestDecryptPKCS1v15},

	{"TestEncryptPKCS1v15", _test.TestEncryptPKCS1v15},

	{"TestEncryptPKCS1v15SessionKey", _test.TestEncryptPKCS1v15SessionKey},

	{"TestEncryptPKCS1v15DecrypterSessionKey", _test.TestEncryptPKCS1v15DecrypterSessionKey},

	{"TestNonZeroRandomBytes", _test.TestNonZeroRandomBytes},

	{"TestSignPKCS1v15", _test.TestSignPKCS1v15},

	{"TestVerifyPKCS1v15", _test.TestVerifyPKCS1v15},

	{"TestOverlongMessagePKCS1v15", _test.TestOverlongMessagePKCS1v15},

	{"TestUnpaddedSignature", _test.TestUnpaddedSignature},

	{"TestShortSessionKey", _test.TestShortSessionKey},

	{"TestEMSAPSS", _test.TestEMSAPSS},

	{"TestPSSGolden", _test.TestPSSGolden},

	{"TestPSSOpenSSL", _test.TestPSSOpenSSL},

	{"TestPSSNilOpts", _test.TestPSSNilOpts},

	{"TestPSSSigning", _test.TestPSSSigning},

	{"TestKeyGeneration", _test.TestKeyGeneration},

	{"Test3PrimeKeyGeneration", _test.Test3PrimeKeyGeneration},

	{"Test4PrimeKeyGeneration", _test.Test4PrimeKeyGeneration},

	{"TestNPrimeKeyGeneration", _test.TestNPrimeKeyGeneration},

	{"TestImpossibleKeyGeneration", _test.TestImpossibleKeyGeneration},

	{"TestGnuTLSKey", _test.TestGnuTLSKey},

	{"TestEncryptOAEP", _test.TestEncryptOAEP},

	{"TestDecryptOAEP", _test.TestDecryptOAEP},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkRSA2048Decrypt", _test.BenchmarkRSA2048Decrypt},

	{"BenchmarkRSA2048Sign", _test.BenchmarkRSA2048Sign},

	{"Benchmark3PrimeRSA2048Decrypt", _test.Benchmark3PrimeRSA2048Decrypt},

}

var examples = []testing.InternalExample{

}

func init() {
	testdeps.ImportPath = "crypto/rsa"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, examples)

	os.Exit(m.Run())

}

