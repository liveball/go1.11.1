// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/fpf/Downloads/go1.11.1/misc/cgo/test/checkconst.go:1:1
// Copyright 2016 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Test a constant in conjunction with pointer checking.

package cgotest; import _cgo_unsafe "unsafe"

/*
#include <stdlib.h>

#define CheckConstVal 0

typedef struct {
	int *p;
} CheckConstStruct;

static void CheckConstFunc(CheckConstStruct *p, int e) {
}
*/
import _ "unsafe"

import (
	"testing"
	"unsafe"
)

func testCheckConst(t *testing.T) {
	// The test is that this compiles successfully.
	p := (_Cfunc__CMalloc)(_Ctype_size_t(unsafe.Sizeof(_Ctype_int(0))))
	defer func(_cgo0 _cgo_unsafe.Pointer) {;	_cgoCheckPointer(_cgo0);	(_Cfunc_free)(_cgo0);}(p)
	func(_cgo0 *_Ctype_struct___2, _cgo1 _Ctype_int) {;	_cgoCheckPointer(_cgo0, true);	(_Cfunc_CheckConstFunc)(_cgo0, _cgo1);}(&_Ctype_struct___2{(*_Ctype_int)(p)}, (_Ciconst_CheckConstVal))
}
