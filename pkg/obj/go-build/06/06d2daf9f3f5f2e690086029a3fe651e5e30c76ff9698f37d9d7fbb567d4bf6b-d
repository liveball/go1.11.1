
package main

import (

	"os"

	"testing"
	"testing/internal/testdeps"


	_test "encoding/asn1"



)

var tests = []testing.InternalTest{

	{"TestParseBool", _test.TestParseBool},

	{"TestParseInt64", _test.TestParseInt64},

	{"TestParseInt32", _test.TestParseInt32},

	{"TestParseBigInt", _test.TestParseBigInt},

	{"TestBitString", _test.TestBitString},

	{"TestBitStringAt", _test.TestBitStringAt},

	{"TestBitStringRightAlign", _test.TestBitStringRightAlign},

	{"TestObjectIdentifier", _test.TestObjectIdentifier},

	{"TestUTCTime", _test.TestUTCTime},

	{"TestGeneralizedTime", _test.TestGeneralizedTime},

	{"TestParseTagAndLength", _test.TestParseTagAndLength},

	{"TestParseFieldParameters", _test.TestParseFieldParameters},

	{"TestUnmarshal", _test.TestUnmarshal},

	{"TestCertificate", _test.TestCertificate},

	{"TestCertificateWithNUL", _test.TestCertificateWithNUL},

	{"TestRawStructs", _test.TestRawStructs},

	{"TestObjectIdentifierEqual", _test.TestObjectIdentifierEqual},

	{"TestStringSlice", _test.TestStringSlice},

	{"TestExplicitTaggedTime", _test.TestExplicitTaggedTime},

	{"TestImplicitTaggedTime", _test.TestImplicitTaggedTime},

	{"TestTruncatedExplicitTag", _test.TestTruncatedExplicitTag},

	{"TestUnmarshalInvalidUTF8", _test.TestUnmarshalInvalidUTF8},

	{"TestMarshalNilValue", _test.TestMarshalNilValue},

	{"TestUnexportedStructField", _test.TestUnexportedStructField},

	{"TestNull", _test.TestNull},

	{"TestExplicitTagRawValueStruct", _test.TestExplicitTagRawValueStruct},

	{"TestTaggedRawValue", _test.TestTaggedRawValue},

	{"TestMarshal", _test.TestMarshal},

	{"TestMarshalWithParams", _test.TestMarshalWithParams},

	{"TestMarshalError", _test.TestMarshalError},

	{"TestInvalidUTF8", _test.TestInvalidUTF8},

	{"TestMarshalOID", _test.TestMarshalOID},

	{"TestIssue11130", _test.TestIssue11130},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkMarshal", _test.BenchmarkMarshal},

}

var examples = []testing.InternalExample{

}

func init() {
	testdeps.ImportPath = "encoding/asn1"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, examples)

	os.Exit(m.Run())

}

