
package main

import (

	"os"

	"testing"
	"testing/internal/testdeps"


	_test "math/cmplx"


	_xtest "math/cmplx_test"


)

var tests = []testing.InternalTest{

	{"TestAbs", _test.TestAbs},

	{"TestAcos", _test.TestAcos},

	{"TestAcosh", _test.TestAcosh},

	{"TestAsin", _test.TestAsin},

	{"TestAsinh", _test.TestAsinh},

	{"TestAtan", _test.TestAtan},

	{"TestAtanh", _test.TestAtanh},

	{"TestConj", _test.TestConj},

	{"TestCos", _test.TestCos},

	{"TestCosh", _test.TestCosh},

	{"TestExp", _test.TestExp},

	{"TestIsNaN", _test.TestIsNaN},

	{"TestLog", _test.TestLog},

	{"TestLog10", _test.TestLog10},

	{"TestPolar", _test.TestPolar},

	{"TestPow", _test.TestPow},

	{"TestRect", _test.TestRect},

	{"TestSin", _test.TestSin},

	{"TestSinh", _test.TestSinh},

	{"TestSqrt", _test.TestSqrt},

	{"TestTan", _test.TestTan},

	{"TestTanh", _test.TestTanh},

	{"TestInfiniteLoopIntanSeries", _test.TestInfiniteLoopIntanSeries},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkAbs", _test.BenchmarkAbs},

	{"BenchmarkAcos", _test.BenchmarkAcos},

	{"BenchmarkAcosh", _test.BenchmarkAcosh},

	{"BenchmarkAsin", _test.BenchmarkAsin},

	{"BenchmarkAsinh", _test.BenchmarkAsinh},

	{"BenchmarkAtan", _test.BenchmarkAtan},

	{"BenchmarkAtanh", _test.BenchmarkAtanh},

	{"BenchmarkConj", _test.BenchmarkConj},

	{"BenchmarkCos", _test.BenchmarkCos},

	{"BenchmarkCosh", _test.BenchmarkCosh},

	{"BenchmarkExp", _test.BenchmarkExp},

	{"BenchmarkLog", _test.BenchmarkLog},

	{"BenchmarkLog10", _test.BenchmarkLog10},

	{"BenchmarkPhase", _test.BenchmarkPhase},

	{"BenchmarkPolar", _test.BenchmarkPolar},

	{"BenchmarkPow", _test.BenchmarkPow},

	{"BenchmarkRect", _test.BenchmarkRect},

	{"BenchmarkSin", _test.BenchmarkSin},

	{"BenchmarkSinh", _test.BenchmarkSinh},

	{"BenchmarkSqrt", _test.BenchmarkSqrt},

	{"BenchmarkTan", _test.BenchmarkTan},

	{"BenchmarkTanh", _test.BenchmarkTanh},

}

var examples = []testing.InternalExample{

	{"ExampleAbs", _xtest.ExampleAbs, "5.0\n", false},

	{"ExampleExp", _xtest.ExampleExp, "(0.0+0.0i)\n", false},

	{"ExamplePolar", _xtest.ExamplePolar, "r: 2.0, θ: 0.5*π\n", false},

}

func init() {
	testdeps.ImportPath = "math/cmplx"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, examples)

	os.Exit(m.Run())

}

