//go:cgo_ldflag "-g"
//go:cgo_ldflag "-O2"
// Code generated by cmd/cgo; DO NOT EDIT.

package main

import "unsafe"

import _ "runtime/cgo"

import "syscall"

var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype_char int8

type _Ctype_struct_s struct {
	a [10]*_Ctype_char
}

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgo_runtime_cgocallback runtime.cgocallback
func _cgo_runtime_cgocallback(unsafe.Pointer, unsafe.Pointer, uintptr, uintptr)

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, ...interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})

//go:cgo_import_static _cgo_23a554843569_Cfunc_f1
//go:linkname __cgofn__cgo_23a554843569_Cfunc_f1 _cgo_23a554843569_Cfunc_f1
var __cgofn__cgo_23a554843569_Cfunc_f1 byte
var _cgo_23a554843569_Cfunc_f1 = unsafe.Pointer(&__cgofn__cgo_23a554843569_Cfunc_f1)

//go:cgo_unsafe_args
func _Cfunc_f1() (r1 *_Ctype_struct_s) {
	_cgo_runtime_cgocall(_cgo_23a554843569_Cfunc_f1, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_23a554843569_Cfunc_f2
//go:linkname __cgofn__cgo_23a554843569_Cfunc_f2 _cgo_23a554843569_Cfunc_f2
var __cgofn__cgo_23a554843569_Cfunc_f2 byte
var _cgo_23a554843569_Cfunc_f2 = unsafe.Pointer(&__cgofn__cgo_23a554843569_Cfunc_f2)

//go:cgo_unsafe_args
func _Cfunc_f2(p0 *_Ctype_struct_s) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_23a554843569_Cfunc_f2, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
