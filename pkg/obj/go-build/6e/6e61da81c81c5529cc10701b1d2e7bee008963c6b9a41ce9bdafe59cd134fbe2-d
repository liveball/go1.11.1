
package main

import (

	"os"

	"testing"
	"testing/internal/testdeps"


	_test "crypto/des"


	_ "crypto/des_test"


)

var tests = []testing.InternalTest{

	{"TestWeakKeys", _test.TestWeakKeys},

	{"TestSemiWeakKeyPairs", _test.TestSemiWeakKeyPairs},

	{"TestDESEncryptBlock", _test.TestDESEncryptBlock},

	{"TestDESDecryptBlock", _test.TestDESDecryptBlock},

	{"TestEncryptTripleDES", _test.TestEncryptTripleDES},

	{"TestDecryptTripleDES", _test.TestDecryptTripleDES},

	{"TestVariablePlaintextKnownAnswer", _test.TestVariablePlaintextKnownAnswer},

	{"TestVariableCiphertextKnownAnswer", _test.TestVariableCiphertextKnownAnswer},

	{"TestInversePermutationKnownAnswer", _test.TestInversePermutationKnownAnswer},

	{"TestInitialPermutationKnownAnswer", _test.TestInitialPermutationKnownAnswer},

	{"TestVariableKeyKnownAnswerEncrypt", _test.TestVariableKeyKnownAnswerEncrypt},

	{"TestVariableKeyKnownAnswerDecrypt", _test.TestVariableKeyKnownAnswerDecrypt},

	{"TestPermutationOperationKnownAnswerEncrypt", _test.TestPermutationOperationKnownAnswerEncrypt},

	{"TestPermutationOperationKnownAnswerDecrypt", _test.TestPermutationOperationKnownAnswerDecrypt},

	{"TestSubstitutionTableKnownAnswerEncrypt", _test.TestSubstitutionTableKnownAnswerEncrypt},

	{"TestSubstitutionTableKnownAnswerDecrypt", _test.TestSubstitutionTableKnownAnswerDecrypt},

	{"TestInitialPermute", _test.TestInitialPermute},

	{"TestFinalPermute", _test.TestFinalPermute},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkEncrypt", _test.BenchmarkEncrypt},

	{"BenchmarkDecrypt", _test.BenchmarkDecrypt},

	{"BenchmarkTDESEncrypt", _test.BenchmarkTDESEncrypt},

	{"BenchmarkTDESDecrypt", _test.BenchmarkTDESDecrypt},

}

var examples = []testing.InternalExample{

}

func init() {
	testdeps.ImportPath = "crypto/des"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, examples)

	os.Exit(m.Run())

}

