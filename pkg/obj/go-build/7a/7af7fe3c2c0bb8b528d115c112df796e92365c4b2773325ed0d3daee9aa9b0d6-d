// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/fpf/Downloads/go1.11.1/misc/cgo/test/issue12030.go:1:1
// Copyright 2015 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Issue 12030. sprintf is defined in both ntdll and msvcrt,
// Normally we want the one in the msvcrt.

package cgotest; import _cgo_unsafe "unsafe"

/*
#include <stdio.h>
#include <stdlib.h>
void issue12030conv(char *buf, double x) {
	sprintf(buf, "d=%g", x);
}
*/
import _ "unsafe"

import (
	"fmt"
	"testing"
	"unsafe"
)

func test12030(t *testing.T) {
	buf := (*_Ctype_char)((_Cfunc__CMalloc)(256))
	defer func(_cgo0 _cgo_unsafe.Pointer) {;	_cgoCheckPointer(_cgo0);	(_Cfunc_free)(_cgo0);}(unsafe.Pointer(buf))
	for _, f := range []float64{1.0, 2.0, 3.14} {
		(_Cfunc_issue12030conv)(buf, _Ctype_double(f))
		got := (_Cfunc_GoString)(buf)
		if want := fmt.Sprintf("d=%g", f); got != want {
			t.Fatalf("C.sprintf failed for %g: %q != %q", f, got, want)
		}
	}
}
