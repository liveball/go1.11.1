// Code generated by cmd/cgo; DO NOT EDIT.

//line /Users/fpf/Downloads/go1.11.1/misc/cgo/testplugin/src/issue25756/plugin/life.go:1:1
// Copyright 2010 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package main

// #include "life.h"
import _ "unsafe"

import "unsafe"

func Run(gen, x, y int, a []int32) {
	n := make([]int32, x*y)
	for i := 0; i < gen; i++ {
		(_Cfunc_Step)(_Ctype_int(x), _Ctype_int(y), (*_Ctype_int)(unsafe.Pointer(&a[0])), (*_Ctype_int)(unsafe.Pointer(&n[0])))
		copy(a, n)
	}
}

// Keep the channels visible from Go.
var chans [4]chan bool

//export GoStart
// Double return value is just for testing.
func GoStart(i, xdim, ydim, xstart, xend, ystart, yend _Ctype_int, a *_Ctype_int, n *_Ctype_int) (int, int) {
	c := make(chan bool, int((*_Cvar_MYCONST)))
	go func() {
		(_Cfunc_DoStep)(xdim, ydim, xstart, xend, ystart, yend, a, n)
		c <- true
	}()
	chans[i] = c
	return int(i), int(i + 100)
}

//export GoWait
func GoWait(i _Ctype_int) {
	<-chans[i]
	chans[i] = nil
}
