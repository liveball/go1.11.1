
package main

import (

	"os"

	"testing"
	"testing/internal/testdeps"


	_test "go/ast"


	_xtest "go/ast_test"


)

var tests = []testing.InternalTest{

	{"TestCommentText", _test.TestCommentText},

	{"TestPrint", _test.TestPrint},

	{"TestCommentMap", _xtest.TestCommentMap},

	{"TestFilterDuplicates", _xtest.TestFilterDuplicates},

}

var benchmarks = []testing.InternalBenchmark{

}

var examples = []testing.InternalExample{

	{"ExampleInspect", _xtest.ExampleInspect, "src.go:2:9:\tp\nsrc.go:3:7:\tc\nsrc.go:3:11:\t1.0\nsrc.go:4:5:\tX\nsrc.go:4:9:\tf\nsrc.go:4:11:\t3.14\nsrc.go:4:17:\t2\nsrc.go:4:21:\tc\n", false},

	{"ExamplePrint", _xtest.ExamplePrint, "     0  *ast.File {\n     1  .  Package: 2:1\n     2  .  Name: *ast.Ident {\n     3  .  .  NamePos: 2:9\n     4  .  .  Name: \"main\"\n     5  .  }\n     6  .  Decls: []ast.Decl (len = 1) {\n     7  .  .  0: *ast.FuncDecl {\n     8  .  .  .  Name: *ast.Ident {\n     9  .  .  .  .  NamePos: 3:6\n    10  .  .  .  .  Name: \"main\"\n    11  .  .  .  .  Obj: *ast.Object {\n    12  .  .  .  .  .  Kind: func\n    13  .  .  .  .  .  Name: \"main\"\n    14  .  .  .  .  .  Decl: *(obj @ 7)\n    15  .  .  .  .  }\n    16  .  .  .  }\n    17  .  .  .  Type: *ast.FuncType {\n    18  .  .  .  .  Func: 3:1\n    19  .  .  .  .  Params: *ast.FieldList {\n    20  .  .  .  .  .  Opening: 3:10\n    21  .  .  .  .  .  Closing: 3:11\n    22  .  .  .  .  }\n    23  .  .  .  }\n    24  .  .  .  Body: *ast.BlockStmt {\n    25  .  .  .  .  Lbrace: 3:13\n    26  .  .  .  .  List: []ast.Stmt (len = 1) {\n    27  .  .  .  .  .  0: *ast.ExprStmt {\n    28  .  .  .  .  .  .  X: *ast.CallExpr {\n    29  .  .  .  .  .  .  .  Fun: *ast.Ident {\n    30  .  .  .  .  .  .  .  .  NamePos: 4:2\n    31  .  .  .  .  .  .  .  .  Name: \"println\"\n    32  .  .  .  .  .  .  .  }\n    33  .  .  .  .  .  .  .  Lparen: 4:9\n    34  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n    35  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n    36  .  .  .  .  .  .  .  .  .  ValuePos: 4:10\n    37  .  .  .  .  .  .  .  .  .  Kind: STRING\n    38  .  .  .  .  .  .  .  .  .  Value: \"\\\"Hello, World!\\\"\"\n    39  .  .  .  .  .  .  .  .  }\n    40  .  .  .  .  .  .  .  }\n    41  .  .  .  .  .  .  .  Ellipsis: -\n    42  .  .  .  .  .  .  .  Rparen: 4:25\n    43  .  .  .  .  .  .  }\n    44  .  .  .  .  .  }\n    45  .  .  .  .  }\n    46  .  .  .  .  Rbrace: 5:1\n    47  .  .  .  }\n    48  .  .  }\n    49  .  }\n    50  .  Scope: *ast.Scope {\n    51  .  .  Objects: map[string]*ast.Object (len = 1) {\n    52  .  .  .  \"main\": *(obj @ 11)\n    53  .  .  }\n    54  .  }\n    55  .  Unresolved: []*ast.Ident (len = 1) {\n    56  .  .  0: *(obj @ 29)\n    57  .  }\n    58  }\n", false},

	{"ExampleCommentMap", _xtest.ExampleCommentMap, "// This is the package comment.\npackage main\n\n// This comment is associated with the hello constant.\nconst hello = \"Hello, World!\" // line comment 1\n\n// This comment is associated with the main function.\nfunc main() {\n\tfmt.Println(hello) // line comment 3\n}\n", false},

}

func init() {
	testdeps.ImportPath = "go/ast"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, examples)

	os.Exit(m.Run())

}

